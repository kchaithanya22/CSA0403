
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>

int main() {
    int fd;
    struct stat fileStat;
    DIR *dir;
    struct dirent *entry;
    char *filename = "sample.txt";

    // 1. Open or create a file
    fd = open(filename, O_CREAT | O_RDWR, 0644);
    if (fd == -1) {
        perror("open");
        return 1;
    }

    // 2. Write some text
    const char *text = "Testing UNIX I/O system calls.\n";
    write(fd, text, strlen(text));

    // 3. Use lseek to go back to the beginning
    if (lseek(fd, 0, SEEK_SET) == -1) {
        perror("lseek");
        close(fd);
        return 1;
    }

    // 4. Use fcntl to get file descriptor flags
    int flags = fcntl(fd, F_GETFL);
    if (flags == -1) {
        perror("fcntl");
        close(fd);
        return 1;
    }
    printf("File opened with flags: 0x%x\n", flags);

    // 5. Use stat to get file information
    if (stat(filename, &fileStat) == -1) {
        perror("stat");
        close(fd);
        return 1;
    }

    printf("File size: %ld bytes\n", fileStat.st_size);
    printf("File permissions: %o\n", fileStat.st_mode & 0777);
    printf("Last modified: %ld\n", fileStat.st_mtime);

    // 6. Read and display contents of current directory
    dir = opendir(".");
    if (dir == NULL) {
        perror("opendir");
        close(fd);
        return 1;
    }

    printf("\nFiles in current directory:\n");
    while ((entry = readdir(dir)) != NULL) {
        printf("  %s\n", entry->d_name);
    }

    closedir(dir);
    close(fd);
    return 0;
}
