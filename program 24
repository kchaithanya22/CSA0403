#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>      // for open() and O_* constants
#include <unistd.h>     // for read(), write(), close(), lseek()
#include <string.h>     // for strlen()

int main() {
    int fd;
    char buffer[100];
    ssize_t bytesRead, bytesWritten;

    // 1. Open (or create) a file
    fd = open("example.txt", O_CREAT | O_RDWR, 0644);  // rw-r--r--
    if (fd == -1) {
        perror("Error opening file");
        return 1;
    }

    // 2. Write to the file
    const char *text = "Hello, UNIX system calls!";
    bytesWritten = write(fd, text, strlen(text));
    if (bytesWritten == -1) {
        perror("Error writing to file");
        close(fd);
        return 1;
    }
    printf("Written %zd bytes to file.\n", bytesWritten);

    // 3. Move file pointer to beginning
    if (lseek(fd, 0, SEEK_SET) == -1) {
        perror("Error seeking in file");
        close(fd);
        return 1;
    }

    // 4. Read from the file
    bytesRead = read(fd, buffer, sizeof(buffer) - 1);
    if (bytesRead == -1) {
        perror("Error reading from file");
        close(fd);
        return 1;
    }
    buffer[bytesRead] = '\0';  // null terminate the string
    printf("Read from file: %s\n", buffer);

    // 5. Close the file
    if (close(fd) == -1) {
        perror("Error closing file");
        return 1;
    }

    return 0;
}
